<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
  <ModulePrefs title="Jenkins Gadget" /> 
  <UserPref name="jenkins_url" display_name="Jenkins REST URL" default_value="http://&lt;server&gt;/jenkins/view/&lt;viewname&gt;/api/json?depth=1"/>
  <UserPref name="nr_of_columns" display_name="Nr. of columns" default_value="1"/>
  <Content type="html" view="home,default,canvas,wallboard">
    <![CDATA[
    <html>
    <head>
        <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
        <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js"></script>
        <style> 
            body {
                background-color: #000;
            }
            .panelcontainer {
                width:  100%;
                height: 100%;
            }
            .panelrow {
                clear: both;
            }
            .panelcell {
                height: 100%;
                float: left;
                margin: 1px;
                border-radius: 10px;
                text-align: center;
                color: #ffffff; 
                font-family: Helvetica; 
                text-align: center;        
                background-color: #990000;                
            }
            .blue {
                background-color: #336600;
            }
            .yellow {
                background-color: #FF9900;
            }
            .disabled, .aborted {
                background-color: #B3B3B3;
            }
        </style>
    </head>
    <body>
        <div id="jobs"/>
        <script>
            var prefs = new gadgets.Prefs();
            refreshJobs();
            setInterval(refreshJobs, 10000);

            function isInProgress(color) {
                return color.indexOf('anime') > -1;
            }

             function refreshJobs() {        
                $.get(prefs.getString('jenkins_url'),
                      function(data) {
                        var jobs = [];
                        $.each(data.jobs, function(key, job) {
                            jobs.push('<div class="panelcell ' 
                                        + job.color.replace('_', ' ') 
                                        + '" id="' + key + '">' 
                                        + job.name + '</div>');
                        });
                        $('#jobs').html(jobs.join(''));
                        divideOverColumns($('#jobs .panelcell'));
                        $(".anime").effect({
                            effect: "pulsate",
                            times: 5,
                            duration: 2000
                        });
                  });
            }
            function divideOverColumns(items) {
                var nrOfColumns = prefs.getInt('nr_of_columns');
                var jobHeight   = Math.min(90 / (items.length / nrOfColumns), 10);
                var jobWidth    = 99 / nrOfColumns;
                var jobFontSize = $(document).height() * jobHeight / 120;
                var start       = 0;
                for (var i = 0; i < nrOfColumns; i++) {
                    var end = Math.ceil((i + 1) * items.length/nrOfColumns);
                    items.slice(start, end).wrapAll('<div class="panelrow">');
                    start = end;
                }
                items.css({
                    width: jobWidth + '%'
                });
                $('#jobs .panelrow')).css({
                    height: jobHeight + "%",
                    font-size: jobFontSize + "px"
                });
            }
        </script>
    </body>
    </html>
    ]]>
  </Content> 
</Module>