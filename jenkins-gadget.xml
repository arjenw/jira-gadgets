<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
  <ModulePrefs title="Jenkins Gadget" /> 
  <UserPref name="jenkins_url" display_name="Jenkins REST URL" default_value="http://&lt;server&gt;/jenkins/view/&lt;viewname&gt;/api/json?depth=1"/>
  <UserPref name="nr_of_columns" display_name="Nr. of columns" default_value="1"/>
  <Content type="html" view="home,default,canvas,wallboard">
    <![CDATA[
    <html>
    <head>
        <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
        <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js"></script>
        <style> 
            body {
                background-color: #000;
            }
            #jobs {
                width:  100%;
                height: 100%;
            }
            .panelcell {
                height: 100%;
                float: left;
                margin: 1px;
                border-radius: 10px;
                text-align: center;
                color: #ffffff; 
                font-family: Helvetica; 
                text-align: center;        
                background-color: #990000;                
            }
            .blue {
                background-color: #336600;
            }
            .yellow {
                background-color: #FF9900;
            }
            .disabled, .aborted {
                background-color: #B3B3B3;
            }
        </style>
    </head>
    <body>
        <div id="jobs"/>
        <script>
            var prefs = new gadgets.Prefs();
            refreshJobs();
            setInterval(refreshJobs, 10000);

            function isInProgress(color) {
                return color.indexOf('anime') > -1;
            }

             function refreshJobs() {        
                $.get(prefs.getString('jenkins_url'),
                      function(data) {
                        var jobs = $.map(data.jobs, toElement);
                        $('#jobs').html(jobs.join(''));
                        divideOverColumns($('#jobs .panelcell'));
                        $(".anime").effect({
                            effect: "pulsate",
                            times: 5,
                            duration: 10000
                        });
                  });
            }
            function toElement(job) {
                var title = job.name;
                if (job.healthReport) {
                    for (var i = 0; i < job.healthReport.length; i++) {
                        var result = /Test Result: (\d+) tests failing out of a total of ([\d,]+) tests./.exec(job.healthReport[i].description);
                        if (result && result[1] != 0) {
                            title += " [" + result[1] + "/" + result[2] + "]";
                        }
                    }
                }    
                return '<div class="panelcell ' + job.color.replace('_', ' ')  + '">' + title + '</div>';
            }
            function divideOverColumns(items) {
                var nrOfColumns = prefs.getInt('nr_of_columns');
                var jobHeight   = 90 / Math.ceil(items.length / nrOfColumns);
                var jobWidth    = 99 / nrOfColumns;
                var jobFontSize = $('#jobs').height() * jobHeight / 120;
                items.css({
                    width: jobWidth + '%',
                    height: jobHeight + "%",
                    "font-size": jobFontSize + "px"
                });
            }
        </script>
    </body>
    </html>
    ]]>
  </Content> 
</Module>